steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [ '-c', '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest || exit 0' ]
    id: Cache-Pull
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
      - '--cache-from=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
      - '--build-arg=STORAGE_KEY=${_STORAGE_KEY}'
      - '--build-arg=STORAGE_ACCOUNT=${_STORAGE_ACCOUNT}'
      - '--build-arg=MODELS_BUCKET=${_MODELS_BUCKET}'
      - '--build-arg=ENCODER_MODEL_BUCKET_PATH=${_ENCODER_MODEL_BUCKET_PATH}'
      - '--build-arg=SYNTHESIZER_MODEL_BUCKET_PATH=${_SYNTHESIZER_MODEL_BUCKET_PATH}'
      - '--build-arg=VOCODER_MODEL_BUCKET_PATH=${_VOCODER_MODEL_BUCKET_PATH}'
      - .
      - '-f'
      - Dockerfile
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=latest,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
options:
  substitutionOption: ALLOW_LOOSE
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - kajispeech
